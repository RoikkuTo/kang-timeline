var t=Object.defineProperty,e=Object.defineProperties,s=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable,a=(e,s,i)=>s in e?t(e,s,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[s]=i,h=(t,e)=>{for(var s in e||(e={}))r.call(e,s)&&a(t,s,e[s]);if(i)for(var s of i(e))n.call(e,s)&&a(t,s,e[s]);return t};let c=[];class o{static loop(t){for(const e of c)e.consume(t);o.requestId=requestAnimationFrame(o.loop)}static start(){o.requestId=requestAnimationFrame(o.loop)}static subscribe(t){c.push(t)}static checkId(t){return c.every((e=>e.id!==t))}static unsubscribe(t){const e=c.findIndex((e=>e.id===t));-1!==e&&c.splice(e,1)}}o.start();class l{constructor(t){if(this.frequency=0,this.task=()=>null,"object"==typeof t){const{frequency:e,run:s}=t;this.frequency=e||0,this.task=s}else"function"==typeof t&&(this.frequency=0,this.task=t);this.count=0}run(t){var i,r;t.currentTime>=this.frequency*this.count&&(this.count++,this.task((i=h({},t),r={count:this.count},e(i,s(r)))))}}class u{constructor(){this.list=[],this.index=0}add(t){this.list.push(h({id:Math.random()+Date.now()},t)),this.list.sort(((t,e)=>t.timestamp<e.timestamp?-1:t.timestamp>e.timestamp?1:0))}remove(t){const e=this.list.map((t=>t.id)).indexOf(t);this.list.splice(e,0),this.index--}compare(t){this.list[this.index]&&this.list[this.index].timestamp<=t.currentTime&&(this.list[this.index].run(t),this.index++)}}class m{constructor(t){this.link=null,this.context=t}add(t,e=(()=>null)){const s=this.link;return this.link=new Promise((async function(i,r){await s,await new Promise(t).then((()=>{e(),console.log("vu"),i(null)})).catch((()=>{console.error("Missing resolve in the request function."),e(),r()}))})),this.context}}class d{constructor(t){this.temp=null,this.keytime=null,this.initial=0,this.timestamp=0,this.context=t}compare(t){this.keytime&&(null===this.temp&&(this.temp=t.currentTime+this.keytime.delay),null!==this.temp&&this.temp<=t.currentTime&&(this.keytime.callback(t),this.keytime=null,this.temp=null))}}class p{constructor(t,e){this.currentTime=t,this.globalTime=e}}export default class{constructor(t={}){const{id:e,speed:s,task:i}=t;var r;this.id=(r=e)?o.checkId(r)?r:(console.error(`ERROR: The "${r}" id has already been defined. (Timeline Library)`),Date.now()):Date.now(),this.speed=s||1,this.task=i?new l(i):null,this.userKeytimes=new u,this.chain=new m(this),this.utilKeytimes=new d(this),this.bank=0,this.initial=0,this.current=0,this.state="stop",o.subscribe(this)}consume(t){this.controller(t);const e=new p(this.current,t);this.utilKeytimes.compare(e),this.userKeytimes.compare(e)}setId(t){t?o.checkId(t)?this.id=t:console.error(`ERROR: The "${t}" id has already been defined. (Timeline Library)`):console.error("ERROR: Please specify an id. (Timeline Library)")}setRatio(t){this.speed=t}setTask(t){this.task=new l(t)}addKeytime(t){this.userKeytimes.add(t)}removeKeytime(t){this.userKeytimes.remove(t)}listKeytimes(){return this.userKeytimes.list}controller(t){switch(this.initial||(this.initial=t),this.state){case"start":this.bank&&(this.initial+=this.bank,this.bank=null),this.current=(t-this.initial)*this.speed,this.task&&this.task.run(new p(this.current,t));break;case"stop":this.bank=(t-this.initial-this.current)*this.speed;break;case"reset":this.state="stop",this.current=0,this.initial=0,this.bank=null;break;default:console.error("Undefined state.")}}request(t,e=0,s){return this.chain.add(((s,i)=>{this.utilKeytimes.keytime={id:Date.now(),delay:e,callback:e=>{this.state=t,s(null)}}}).bind(this),s)}start(t,e){return this.request("start",t,e)}stop(t,e){return this.request("stop",t,e)}reset(t,e){return this.request("reset",t,e)}delete(){o.unsubscribe(this.id)}}
